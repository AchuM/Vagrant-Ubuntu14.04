PidFile = /var/run/hhvm/pid

Eval {
  Jit = true
  JitWarmupRequests = 3
}

Log {
  Level = Warning
  AlwaysLogUnhandledExceptions = true
  RuntimeErrorReportingLevel = 8191
  UseLogFile = true
  UseSyslog = false
  File = /var/log/hhvm/error.log
  Access {
    * {
      File = /var/log/hhvm/access.log
      Format = %h %l %u % t \"%r\" %>s %b
    }
  }
}

Server {
  Host = hhvm
  Port = 80
  IP = 127.0.0.1
  ThreadCount = 50

  # Path to source files and static contents
  SourceRoot = /var/www

  RequestTimeoutSeconds = 30
  RequestMemoryMaxBytes = 134217728

  # HTTP settings
  GzipCompressionLevel = 3
  EnableMagicQuotesGpc = false
  EnableKeepAlive = true
  EnableEarlyFlush = true
  ForceChunkedEncoding = false
  MaxPostSize = 8  # in MB
  LibEventSyncSend = true
  ResponseQueueCount = 0

  # Static contents
  # FileCache = cache
  # EnableStaticContentCache = true
  # EnableStaticContentFromDisk = true
  # ExpiresActive = true
  # ExpiresDefault = 2592000
  # DefaultCharsetName = UTF-8

  APC {
    EnableApc = true
  }

  # DNS cache
  DnsCache {
    Enable = false
    TTL = 600   # in seconds
    KeyMaturityThreshold = 20
    MaximumCapacity = 0
    KeyFrequencyUpdatePeriod = 1000
  }

  # Light process has very little forking cost, because they are pre-forked
  # Recommend to turn it on for faster shell command execution.
  LightProcessFilePrefix = ./lightprocess
  LightProcessCount = 0
}

Sandbox {
  # SandboxMode = true
  # Pattern     = ([A-Za-z0-9]+).dev.example.com
  # Home        = /home
  # ConfFile    = .hphp
}

Debug {
  # FullBacktrace = true
  # ServerStackTrace = true
  # ServerErrorMessage = true
  # TranslateSource = true

  # RecordInput = false
  # ClearInputOnSuccess = true

  # ProfilerOutputDir = /tmp

  # CoreDumpEmail = email address
  # CoreDumpReport = true
}

Repo {
  Central {
    Path = /var/log/hhvm/.hhvm.hhbc
  }
}

# include "/usr/share/hhvm/hdf/static.mime-types.hdf"

StaticFile {
  FilesMatch {
    * {
      pattern = .*\.(dll|exe)
      headers {
        * = Content-Disposition: attachment
      }
    }
  }
  Extensions : StaticMimeTypes
}

MySQL {
  TypedResults = false
}
